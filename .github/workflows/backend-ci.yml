name: CI/CD build, test and deploy

on:
  push:
    branches: [main]

env:
  NODE_VERSION: '18'
  DOCKER_HUB_REPO: mbrabbaa2023/reservation
  DOCKER_TAG: 'latest'

jobs:
  build:
    name: Build
    runs-on: self-hosted  
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4  
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci --production=false
        
      - name: Build project
        working-directory: ./backend
        run: |
          npm run build || echo "Aucun script build trouvé - poursuite du workflow"

  test:
    name: Unit Tests
    needs: build
    runs-on: self-hosted
    env:
      DB_URL: ${{ secrets.NEON_PROD_DB_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run unit tests with coverage
        working-directory: ./backend
        env:
          DB_CONNECTION_STRING: ${{ secrets.NEON_PROD_DB_URL }}
        run: |
          npm test
          npm run coverage -- --coverage || echo "Le rapport de couverture sera généré par Jest"

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage

  build-and-push-image:
    name: Build and Push Docker Image
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_HUB_REPO }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

    